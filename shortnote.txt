truffle create contract Petshop

test:
    -truffle create test Petshop
    - import petPrices.json
    - uncomment account in contract (line 4)


migration:
    - create petPrices.json
    - add Petshop and Petprices.json to deploy_contract 

run-test:
terminal #1 -> truffle develop
terminal #2 -> truffle test -g Petshop

//check each item are match
array.every(callback func) -> run callback num of items in array 
    return: 
        - "false" if at least one round return false
        - "true" if and only if all round return true

src
Download assets.zip in google classroom then extract a zip to under 'src' folder

Normal Mapping 1-D:
table (address (key) | balance (value))
mapping(address => uint)

Mapping 2-D:
table coordinate (2d) (axis x (uint) key 1 | axis y (uint) key 2 | axis z (bool) val)
mapping(uint (x) => mapping(uint (y) => bool))

Project:
Powerpoint (Not PDF / Canvas) 20 Pages

What's Expect in this PPT:
-What
-Technical (Function)
-Example - Real Senario, Case Study 

Topics:
1. ERC20 + ERC223
2. ERC-721 (NFT)
3. ERC-809 (Renting)
4. ERC-864 (NFT Shared Ownership)
5. ERC-998 (Composable NFT)
6. ERC-1155 (Multi-Token (FT + NFT))
7. ERC-1190 NFR (Royalty)